NAME: Henry Genus
EMAIL: henry.a.genus@gmail.com
ID: 304965058

The crux of the assignment was to design a SIMPle SHell to imitate BASH commands.

PACKAGE CONTENTS:
spec.pdf		a pdf copy of the spec for the assignment
simpsh.c		the c source code for the assignment
test.sh			a script designed to run test cases on the program
report.pdf		a report comparing our shell to bash and dash

$(make check) runs the following tests:

1.
./simpsh \
    --rdonly in.txt \
    --pipe \
    --pipe \
    --creat --wronly out.txt \
    --creat --wronly err.txt \
    --command 0 2 6 cat - \
    --command 1 4 6 tr i \n \
    --command 3 5 6 wc -l \
    --close 2 \
    --close 4 \
    --wait \
    --profile \
    --time 

This is the most straightforward test; it is interesting because each
command depends on the previous one operating correctly, so the pipes
are tested as well.

2.
./simpsh \
    --rdonly in.txt \
    --pipe \
    --pipe \
    --creat --wronly out.txt \
    --creat --wronly err.txt \
    --command 1 4 6 sort -\
    --command 0 2 6 cat - \
    --command 3 5 6 tr A-Z a-z \
    --close 2 \
    --close 4 \
    --wait \
    --profile \
    --time 

This test makes sure that the order of the commands does not matter,
as they are run in parallel, but the instruction lists sort, which
uses the output of cat, as before cat.

3.
./simpsh --rdonly in.txt \
    --pipe \
    --creat --append --wronly out.txt \
    --creat --wronly err.txt \
    --command 1 3 4 wc -l \
    --command 0 2 4 cat - \
    --command 0 2 4 cat - \
    --close 2 \
    --close 4 \
    --wait \
    --profile \
    --time 

This tests two commands which write to the same file similtaneously. 
